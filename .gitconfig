[core]
	editor = code --wait
[user]
	name = Matt Tingen
	email = matt.tingen@gmail.com
[push]
	default = current
[rebase]
	missingCommitsCheck = error
	autoSquash = true
[diff]
	tool = code
	guitool = code
[difftool "code"]
	cmd = code --wait --diff $LOCAL $REMOTE
[custom]
	basebranch = master
[alias]
	s = status
	ls = log --oneline
	l = "!git log \"$(git basebranch)\".. --oneline"
	base = "!git co \"$(git basebranch)\""
	co = checkout
	c = commit
	fix = commit --amend --no-edit
	edit = commit --amend --only --no-verify
	root = rev-parse --show-toplevel
	d = difftool --gui --no-prompt
	stashkeep = "!git stash && git stash apply"
	# Rebase n most recent commits
	rbn = "!sh -c \"git rebase -i @~$1\" -"
	# Rebase from a specific commit forward
	rbf = "!sh -c \"git rebase -i $1^\" -"
	# Rebase commits since branching
	rb = "!git rbn $(git l | wc -l | xargs)"
	pushup = "!git push -u origin `git_branch`"
	# Display recently committed branches and prompt for one to checkout
	recent = "for-each-ref --count=12 --sort=-committerdate refs/heads/ --format=\"%(refname:short)\""
	# Checkout nth most recently committed
	cor = "!select br in $(git recent); do git co $br; break; done"
	today = "!git log --since=midnight --author=\"$(git config user.name)\" --oneline"
	yesterday = "!git log --since="yesterday.midnight" --until=midnight --author=\"$(git config user.name)\" --oneline"
	msg = "log --format=%B -n 1"
	uncommit = "!git msg HEAD | pbcopy && git reset --mixed HEAD~1"
	hash = "rev-parse --verify HEAD"

	# The base branch for a repo is used by git aliases for e.g. abbreviated
	# logging and quick interactive rebases.
	setdefaultbasebranch = config --global --replace-all custom.basebranch
	setbasebranch = config --replace-all custom.basebranch
	basebranch = config --get custom.basebranch
